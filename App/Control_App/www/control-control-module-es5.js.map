{"version":3,"sources":["./src/app/control/control.page.html","./src/app/control/control.module.ts","./src/app/control/control.page.scss","./src/app/control/control.page.ts"],"names":[],"mappings":"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","file":"control-control-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n    <ion-toolbar color=\\\"primary\\\">\\n        <ion-buttons slot=\\\"start\\\">\\n            <ion-back-button defaultHref=\\\"/\\\"></ion-back-button>\\n          </ion-buttons>\\n      <ion-title>\\n        Control Panel\\n      </ion-title>\\n    </ion-toolbar>\\n  </ion-header>\\n  \\n  <ion-content>\\n  <ion-grid>\\n    \\n      <ion-row>\\n        <img  src=\\\"{{photoImg}}\\\">\\n      </ion-row>\\n    <ion-card>\\n      <ion-item>\\n        <ion-label color=\\\"#0000ff\\\">Lights color</ion-label>\\n        <ion-select value=0 okText=\\\"Okay\\\" cancelText=\\\"Dismiss\\\" #C [(ngModel)]=\\\"C.value\\\" (ngModelChange)=\\\"onUpdateColor(C.value)\\\">\\n          <ion-select-option value=0>Off</ion-select-option>\\n          <ion-select-option value=1>Red</ion-select-option>\\n          <ion-select-option value=2>Green</ion-select-option>\\n          <ion-select-option value=3>Blue</ion-select-option>\\n          <ion-select-option value=4>Yellow</ion-select-option>\\n          <ion-select-option value=5>Orange</ion-select-option>\\n          <ion-select-option value=6>Purple</ion-select-option>\\n          <ion-select-option value=7>Pink</ion-select-option>\\n          <ion-select-option value=8>White</ion-select-option>\\n          <ion-select-option value=9>Cyan</ion-select-option>\\n        </ion-select>\\n      </ion-item>\\n       \\n    </ion-card>\\n   \\n\\n    <ion-row>\\n        <ion-col>\\n            <ion-fab>\\n                <ion-fab-button (click)=onVideo() color=\\\"medium\\\">\\n                  <ion-icon name=\\\"videocam\\\"></ion-icon>\\n                </ion-fab-button>\\n              </ion-fab>\\n        </ion-col>\\n        <ion-col>\\n            <ion-fab>\\n                <ion-fab-button (click)=onPhoto() color=\\\"medium\\\">\\n                  <ion-icon name=\\\"camera\\\"></ion-icon>\\n                </ion-fab-button>\\n              </ion-fab>\\n        </ion-col>\\n        <ion-col>\\n            <ion-fab>\\n                <ion-fab-button (click)=onAlarm() color=\\\"danger\\\">\\n                  <ion-icon name={{iconAlarm}}></ion-icon>\\n                </ion-fab-button>\\n              </ion-fab>\\n        </ion-col>\\n        <ion-col>\\n            <ion-fab>\\n                <ion-fab-button (click)=onLock() color=\\\"success\\\">\\n                  <ion-icon name={{iconLock}}></ion-icon>\\n                </ion-fab-button>\\n              </ion-fab>\\n        </ion-col>\\n  </ion-row>\\n\\n  </ion-grid>\\n  </ion-content>\\n  \"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ControlPage } from './control.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ControlPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ControlPage]\n})\nexport class ControlPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRyb2wvY29udHJvbC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit, RootRenderer } from '@angular/core';\nimport { ConnectionService } from '../connection.service';\nimport {HttpClient, HttpParams} from '@angular/common/http';\nimport { Router } from '@angular/router';\n\n\n@Component({\n  selector: 'app-control',\n  templateUrl: './control.page.html',\n  styleUrls: ['./control.page.scss'],\n})\nexport class ControlPage{\n\n  photoImg : string = 'assets/picture.png';\n  dataObject : any[];\n  iconAlarm = 'notifications';\n  iconLock = 'unlock';\n  id : any;\n\n  constructor( private connectionServices: ConnectionService,\n    private router: Router,\n    public http: HttpClient) {\n\n      \n\n  //   this.id = setInterval(() => {\n\n  //     const params = new HttpParams().set('update', '');\n  //     this.http.get('http://' + this.connectionServices.getIP() + ':' + \n  //     this.connectionServices.getPort() + '/', {params}).subscribe((data:any) => {\n  //       //console.log(data);\n  //       this.dataObject = data;\n\n  //       this.stateRoom1 = this.dataObject['bed1'] ? this.lightOn : this.lightOff;\n  //       this.stateRoom2 = this.dataObject['bed2'] ? this.lightOn : this.lightOff;\n  //       this.stateKitchen = this.dataObject['kitchen'] ? this.lightOn : this.lightOff;\n  //       this.stateLivingRoom = this.dataObject['living'] ? this.lightOn : this.lightOff;\n  //       this.stateDiner = this.dataObject['dining'] ? this.lightOn : this.lightOff;\n\n  //       this.stateDoor1 = this.dataObject['door1'] ? this.openedDoor : this.closedDoor;\n  //       this.stateDoor2 = this.dataObject['door2'] ? this.openedDoor : this.closedDoor;\n  //       this.stateDoor3 = this.dataObject['door3'] ? this.openedDoor : this.closedDoor;\n  //       this.stateDoor4 = this.dataObject['door4'] ? this.openedDoor : this.closedDoor;\n  //   });\n\n  // }, 100);//every second\n    //update all status\n  }\n  onPhoto(){\n    console.log(\"Photo\");\n    this.photoImg = 'http://' + this.connectionServices.getIP() + ':' + \n    this.connectionServices.getPort() + '/image?' + new Date().getTime();\n  }\n  onVideo(){\n    console.log(\"Video\");\n    window.location.href = 'http://' + this.connectionServices.getIP() + ':5000' + '/';\n  }\n  onAlarm(){\n    console.log(\"Alarm\");\n    const params = new HttpParams().set('alarm', '');\n    this.http.get('http://' + this.connectionServices.getIP() + ':' + \n    this.connectionServices.getPort() + '/', {params}).subscribe((data:any) => {\n      console.log(data);\n      this.dataObject = data;\n      this.iconAlarm = this.dataObject['state'] ? 'notifications-off' : 'notifications';\n    });\n  }\n  onLock(){\n    console.log(\"Lock\");\n    const params = new HttpParams().set('lock', '');\n    this.http.get('http://' + this.connectionServices.getIP() + ':' + \n    this.connectionServices.getPort() + '/', {params}).subscribe((data:any) => {\n      console.log(data);\n      this.dataObject = data;\n      this.iconLock = this.dataObject['state'] ? 'lock' : 'unlock';\n    });\n  }\n  onUpdateColor(value){\n    console.log(\"Lights turned to \" + value);\n    const params = new HttpParams().set('light', value);\n    this.http.get('http://' + this.connectionServices.getIP() + ':' + \n    this.connectionServices.getPort() + '/', {params}).subscribe((data:any) => {\n      console.log(data);\n    });\n  }\n}\n"],"sourceRoot":""}